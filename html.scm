(define maketag (lambda (tag param str)
  (string-append "<" tag (if (eq? param '()) "" (car (map (lambda (x) (string-append " " (car x) "=\"" (cdr x) "\"") ) param ))) ">\n" str "</" tag ">\n")
  )
)
(define-syntax l2e (syntax-rules() ((l2e x y)(eval `(x ,@y) (interaction-environment)))))
(define (makeorphantag tagstring) (string-append "<" tagstring ">\n"))
(define (html string) (maketag "html" '() string))
(define (head string) (maketag "head" '() string))
(define (body string) (maketag "body" '() string))
(define (p string) (maketag "p" '() string))
(define (br) (makeorphantag "</br>\n"))
(define (b string) (maketag "b" '() string))
(define (a string url) (maketag "a" `(("href" . ,url)) string))
(define (ul terms) (maketag "ul" '() (l2e string-append (map (lambda (x) (maketag "li" '() x)) terms))))
(define (ol terms) (maketag "ol" '() (l2e string-append (map (lambda (x) (maketag "li" '() x)) terms))))
;(define (loadcss URL) (maketag "link" '() 
